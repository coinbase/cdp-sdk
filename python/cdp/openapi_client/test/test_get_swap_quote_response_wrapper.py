# coding: utf-8

"""
    Coinbase Developer Platform APIs

    The Coinbase Developer Platform APIs - leading the world's transition onchain.

    The version of the OpenAPI document: 2.0.0
    Contact: cdp@coinbase.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from cdp.openapi_client.models.get_swap_quote_response_wrapper import GetSwapQuoteResponseWrapper

class TestGetSwapQuoteResponseWrapper(unittest.TestCase):
    """GetSwapQuoteResponseWrapper unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GetSwapQuoteResponseWrapper:
        """Test GetSwapQuoteResponseWrapper
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GetSwapQuoteResponseWrapper`
        """
        model = GetSwapQuoteResponseWrapper()
        if include_optional:
            return GetSwapQuoteResponseWrapper(
                block_number = '17038723',
                buy_amount = '1000000000000000000',
                buy_token = '0x7F5c764cBc14f9669B88837ca1490cCa17c31607',
                fees = {"gasFee":{"amount":"1000000000000000000","token":"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"},"protocolFee":{"amount":"1000000000000000000","token":"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"}},
                issues = {"allowance":{"currentAllowance":"1000000000","spender":"0x000000000022D473030F116dDEE9F6B43aC78BA3"},"balance":{"token":"0x6B175474E89094C44Da98b954EedeAC495271d0F","currentBalance":"900000000000000000","requiredBalance":"1000000000000000000"},"simulationIncomplete":false},
                liquidity_available = False,
                min_buy_amount = '900000000000000000',
                sell_amount = '1000000000000000000',
                sell_token = '0x6B175474E89094C44Da98b954EedeAC495271d0F',
                gas = '100000',
                gas_price = '1000000000'
            )
        else:
            return GetSwapQuoteResponseWrapper(
                block_number = '17038723',
                buy_amount = '1000000000000000000',
                buy_token = '0x7F5c764cBc14f9669B88837ca1490cCa17c31607',
                fees = {"gasFee":{"amount":"1000000000000000000","token":"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"},"protocolFee":{"amount":"1000000000000000000","token":"0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"}},
                issues = {"allowance":{"currentAllowance":"1000000000","spender":"0x000000000022D473030F116dDEE9F6B43aC78BA3"},"balance":{"token":"0x6B175474E89094C44Da98b954EedeAC495271d0F","currentBalance":"900000000000000000","requiredBalance":"1000000000000000000"},"simulationIncomplete":false},
                liquidity_available = False,
                min_buy_amount = '900000000000000000',
                sell_amount = '1000000000000000000',
                sell_token = '0x6B175474E89094C44Da98b954EedeAC495271d0F',
                gas = '100000',
                gas_price = '1000000000',
        )
        """

    def testGetSwapQuoteResponseWrapper(self):
        """Test GetSwapQuoteResponseWrapper"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
