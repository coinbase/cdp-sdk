# coding: utf-8

"""
    Coinbase Developer Platform APIs

    The Coinbase Developer Platform APIs - leading the world's transition onchain.

    The version of the OpenAPI document: 2.0.0
    Contact: cdp@coinbase.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

<<<<<<<< HEAD:python/cdp/openapi_client/models/revoke_spend_permission_request.py
from pydantic import BaseModel, ConfigDict, Field, StrictStr
========
from pydantic import BaseModel, ConfigDict, Field, StrictBool, StrictInt
>>>>>>>> 6563448cfa934a64d92122e7d3bea9e46973cbc1:python/cdp/openapi_client/models/onchain_data_result_metadata.py
from typing import Any, ClassVar, Dict, List, Optional
from typing import Optional, Set
from typing_extensions import Self

<<<<<<<< HEAD:python/cdp/openapi_client/models/revoke_spend_permission_request.py
class RevokeSpendPermissionRequest(BaseModel):
    """
    RevokeSpendPermissionRequest
    """ # noqa: E501
    network: StrictStr = Field(description="The network of the spend permission.")
    permission_hash: StrictStr = Field(description="The hash of the spend permission to revoke.", alias="permissionHash")
    paymaster_url: Optional[StrictStr] = Field(default=None, description="The paymaster URL of the spend permission.", alias="paymasterUrl")
    __properties: ClassVar[List[str]] = ["network", "permissionHash", "paymasterUrl"]
========
class OnchainDataResultMetadata(BaseModel):
    """
    Metadata about query execution.
    """ # noqa: E501
    cached: Optional[StrictBool] = Field(default=None, description="Whether the result was served from cache.")
    execution_time_ms: Optional[StrictInt] = Field(default=None, description="Query execution time in milliseconds.", alias="executionTimeMs")
    row_count: Optional[StrictInt] = Field(default=None, description="Number of rows returned.", alias="rowCount")
    __properties: ClassVar[List[str]] = ["cached", "executionTimeMs", "rowCount"]
>>>>>>>> 6563448cfa934a64d92122e7d3bea9e46973cbc1:python/cdp/openapi_client/models/onchain_data_result_metadata.py

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
<<<<<<<< HEAD:python/cdp/openapi_client/models/revoke_spend_permission_request.py
        """Create an instance of RevokeSpendPermissionRequest from a JSON string"""
========
        """Create an instance of OnchainDataResultMetadata from a JSON string"""
>>>>>>>> 6563448cfa934a64d92122e7d3bea9e46973cbc1:python/cdp/openapi_client/models/onchain_data_result_metadata.py
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
<<<<<<<< HEAD:python/cdp/openapi_client/models/revoke_spend_permission_request.py
        """Create an instance of RevokeSpendPermissionRequest from a dict"""
========
        """Create an instance of OnchainDataResultMetadata from a dict"""
>>>>>>>> 6563448cfa934a64d92122e7d3bea9e46973cbc1:python/cdp/openapi_client/models/onchain_data_result_metadata.py
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
<<<<<<<< HEAD:python/cdp/openapi_client/models/revoke_spend_permission_request.py
            "network": obj.get("network"),
            "permissionHash": obj.get("permissionHash"),
            "paymasterUrl": obj.get("paymasterUrl")
========
            "cached": obj.get("cached"),
            "executionTimeMs": obj.get("executionTimeMs"),
            "rowCount": obj.get("rowCount")
>>>>>>>> 6563448cfa934a64d92122e7d3bea9e46973cbc1:python/cdp/openapi_client/models/onchain_data_result_metadata.py
        })
        return _obj


