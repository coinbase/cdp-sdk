/**
 * Generated by orval v7.6.0 üç∫
 * Do not edit manually.
 * Coinbase Developer Platform APIs
 * The Coinbase Developer Platform APIs - leading the world's transition onchain.
 * OpenAPI spec version: 2.0.0
 */
import type {
  EndUser,
  ListEndUsers200,
  ListEndUsersParams,
  ValidateEndUserAccessTokenBody,
} from "../coinbaseDeveloperPlatformAPIs.schemas.js";

import { cdpApiClient } from "../../cdpApiClient.js";

type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];

/**
 * Lists the end users belonging to the developer's CDP Project.
By default, the response is sorted by creation date in ascending order and paginated to 20 users per page.
 * @summary List end users
 */
export const listEndUsers = (
  params?: ListEndUsersParams,
  options?: SecondParameter<typeof cdpApiClient>,
) => {
  return cdpApiClient<ListEndUsers200>({ url: `/v2/end-users`, method: "GET", params }, options);
};
/**
 * Validates the end user's access token and returns the end user's information. Returns an error if the access token is invalid or expired.

This API is intended to be used by the developer's own backend, and is authenticated using the developer's CDP API key.
 * @summary Validate end user access token
 */
export const validateEndUserAccessToken = (
  validateEndUserAccessTokenBody: ValidateEndUserAccessTokenBody,
  options?: SecondParameter<typeof cdpApiClient>,
) => {
  return cdpApiClient<EndUser>(
    {
      url: `/v2/end-users/auth/validate-token`,
      method: "POST",
      headers: { "Content-Type": "application/json" },
      data: validateEndUserAccessTokenBody,
    },
    options,
  );
};
/**
 * Gets an end user by ID.

This API is intended to be used by the developer's own backend, and is authenticated using the developer's CDP API key.
 * @summary Get an end user
 */
export const getEndUser = (userId: string, options?: SecondParameter<typeof cdpApiClient>) => {
  return cdpApiClient<EndUser>({ url: `/v2/end-users/${userId}`, method: "GET" }, options);
};
export type ListEndUsersResult = NonNullable<Awaited<ReturnType<typeof listEndUsers>>>;
export type ValidateEndUserAccessTokenResult = NonNullable<
  Awaited<ReturnType<typeof validateEndUserAccessToken>>
>;
export type GetEndUserResult = NonNullable<Awaited<ReturnType<typeof getEndUser>>>;
