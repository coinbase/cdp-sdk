{
  "parser": "@typescript-eslint/parser",
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:prettier/recommended",
    "plugin:jsdoc/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript"
  ],
  "plugins": ["@typescript-eslint", "prettier", "import", "unused-imports"],
  "env": {
    "node": true,
    "es6": true
  },
  "parserOptions": {
    "ecmaVersion": 2020,
    "sourceType": "module"
  },
  "rules": {
    "multiline-comment-style": ["error", "starred-block"],
    "prettier/prettier": "error",
    "@typescript-eslint/member-ordering": "error",
    "jsdoc/tag-lines": ["error", "any", { "startLines": 1 }],
    "jsdoc/check-alignment": "error",
    "jsdoc/no-undefined-types": "off",
    "jsdoc/check-param-names": "error",
    "jsdoc/check-tag-names": "error",
    "jsdoc/check-types": "error",
    "jsdoc/implements-on-classes": "error",
    "jsdoc/require-description": "error",
    "jsdoc/require-jsdoc": [
      "error",
      {
        "require": {
          "FunctionDeclaration": true,
          "MethodDefinition": true,
          "ClassDeclaration": true,
          "ArrowFunctionExpression": false,
          "FunctionExpression": false
        }
      }
    ],
    "jsdoc/require-param": "error",
    "jsdoc/require-param-description": "error",
    "jsdoc/require-param-type": "off",
    "jsdoc/require-returns": "error",
    "jsdoc/require-returns-description": "error",
    "jsdoc/require-returns-type": "off",
    "jsdoc/require-hyphen-before-param-description": ["error", "always"],

    // Import order rules
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "external",
          "internal",
          ["parent", "sibling"],
          "index",
          "object",
          "type"
        ],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],

    // Unused imports rules
    "no-unused-vars": "off", // Turned off as unused-imports/no-unused-vars will handle this
    "@typescript-eslint/no-unused-vars": "off", // Turned off as unused-imports/no-unused-vars will handle this
    "unused-imports/no-unused-imports": "error",
    "unused-imports/no-unused-vars": [
      "error",
      {
        "vars": "all",
        "varsIgnorePattern": "^_",
        "args": "after-used",
        "argsIgnorePattern": "^_"
      }
    ]
  },
  "overrides": [
    {
      "files": ["src/index.ts"],
      "rules": {
        "no-restricted-syntax": [
          "error",
          {
            "selector": "ExportAllDeclaration",
            "message": "Export * statements are not allowed. Use named exports instead."
          }
        ]
      }
    }
  ],
  "ignorePatterns": ["**/*.test.ts", "src/openapi-client/generated"],
  "settings": {
    "import/resolver": {
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      },
      "typescript": {}
    }
  }
}
